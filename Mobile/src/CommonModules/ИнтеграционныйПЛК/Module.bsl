
// Новый параметр начала заказа.
// 
// Возвращаемое значение:
//  Структура - Новый параметр начала заказа:
// * УИДЗаказаНаПроизводство 
//
Функция НовыйПараметрНачалаЗаказа() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("УИДЗаказаНаПроизводство");
	
	Возврат Результат;
	
КонецФункции

// Начать заказ.
// 
// Параметры:
//  НовыйПараметрНачалаЗаказа - См. НовыйПараметрНачалаЗаказа
// 
// Возвращаемое значение:
//  Структура - Начать заказ:
// * СтатусЗаказа 
// * ТекстОшибки 
// * ЕстьОшибка 
// 
Функция НачатьЗаказ(НовыйПараметрНачалаЗаказа) Экспорт
	
	Пакет = Новый Структура;
	
	Пакет.Вставить("УникальныйИдентификаторЗаказаНаПроизводство", НовыйПараметрНачалаЗаказа.УИДЗаказаНаПроизводство);
	Пакет.Вставить("Операция", "StartOrder");
	Пакет.Вставить("НомерКонтроллера", 10);
	Пакет.Вставить("ЯчейкаПробега", "D498");
	
	Прокси = НовыйПрокси();
	
	ПакетXDTO = СериализаторXDTO.ЗаписатьXDTO(Пакет);
	ОтветXDTO = Прокси.SendPLK(ПакетXDTO);
	Ответ = СериализаторXDTO.ПрочитатьXDTO(ОтветXDTO);
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьОшибка", Ответ.Ошибка.ЕстьОшибка);
	Результат.Вставить("ТекстОшибки", Ответ.Ошибка.ТекстОшибки);
	Результат.Вставить("СтатусЗаказа", Ответ.СтатусЗаказа);
	
	Возврат Результат;
	
КонецФункции

// Новый параметр завершения заказа.
// 
// Возвращаемое значение:
//  Структура - Новый параметр завершения заказа:
// * НомерКонтроллера 
// * УИДЗаказаНаПроизводство
//
Функция НовыйПараметрЗавершенияЗаказа() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("УИДЗаказаНаПроизводство");
	
	Возврат Результат;
	
КонецФункции

// Завершить заказ.
// 
// Параметры:
//  ПараметрЗавершенияЗаказа Параметр завершения заказа
// 
// Возвращаемое значение:
//  Структура - Завершить заказ:
// * СтатусЗаказа 
// * ТекстОшибки 
// * ЕстьОшибка
// 
Функция ЗавершитьЗаказ(ПараметрЗавершенияЗаказа) Экспорт
	
	Пакет = Новый Структура;
	Пакет.Вставить("Операция", "FinishOrder");
	Пакет.Вставить("УникальныйИдентификаторЗаказаНаПроизводство", ПараметрЗавершенияЗаказа.УИДЗаказаНаПроизводство);
	Пакет.Вставить("НомерКонтроллера", 10);
	
	Прокси = НовыйПрокси();
	
	ПакетXDTO = СериализаторXDTO.ЗаписатьXDTO(Пакет);
	ОтветXDTO = Прокси.FinishOrder(ПакетXDTO);
	Ответ = СериализаторXDTO.ПрочитатьXDTO(ОтветXDTO);
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьОшибка", Ответ.Ошибка.ЕстьОшибка);
	Результат.Вставить("ТекстОшибки", Ответ.Ошибка.ТекстОшибки);
	Результат.Вставить("СтатусЗаказа", Ответ.СтатусЗаказа);
	
	Возврат Результат;
	
КонецФункции

////////////////////////

// Новый параметр отправки HC35.
// 
// Возвращаемое значение:
//  Структура - Новый параметр отправки HC35:
// * ОбработанныйКодОператора 
// * ОбработанныйНомерБухты 
//
Функция НовыйПараметрОтправкиHC35() Экспорт

	Результат = Новый Структура;
	Результат.Вставить("ОбработанныйНомерЗаказа");
	Результат.Вставить("ОбработанныйНомерБухты");
	Результат.Вставить("ОбработанныйКодОператора");
	
	Возврат Результат;

КонецФункции


// Отправить HC35.
// 
// Параметры:
//  ПараметрОтправкиHC35 - См. НовыйПараметрОтправкиHC35
// 
// Возвращаемое значение:
//  Структура - Отправить HC35:
// * ПараметрыЗаказа - ТаблицаЗначений -:
// ** Длина 
// ** Количество 
// ** КоличествоМП 
// ** КоличествоКвМ 
// * УникальныйИдентификаторЗаказаНаПроизводство 
// * Толщина 
// * Остаток 
// * Оператор 
// * Квадратура 
// * Цвет 
// * ТекстОшибки 
// * ЕстьОшибка - Булево -
//
Функция ОтправитьHC35(ПараметрОтправкиHC35) Экспорт
	
	Пакет = Новый Структура;
	Пакет.Вставить("НомерЗаказа", ПараметрОтправкиHC35.ОбработанныйНомерЗаказа);
	Пакет.Вставить("НомерБухты", ПараметрОтправкиHC35.ОбработанныйНомерБухты);
	Пакет.Вставить("Оператор", ПараметрОтправкиHC35.ОбработанныйКодОператора);
	Пакет.Вставить("Операция", "SendPLK");
	Пакет.Вставить("ВидПродукции", "НС35");
	
	Пакет.Вставить("НомерКонтроллера", 10);
	
	Прокси = НовыйПрокси();
	
	ПакетXDTO = СериализаторXDTO.ЗаписатьXDTO(Пакет);
	ОтветXDTO = Прокси.SendPLK(ПакетXDTO);
	Ответ = СериализаторXDTO.ПрочитатьXDTO(ОтветXDTO);
	
	ЕстьОшибка = Ответ.Ошибка.ЕстьОшибка И Не Ответ.Ошибка.ТекстОшибки = "Не записано значение в ПЛК";
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьОшибка", ЕстьОшибка);
	Результат.Вставить("ТекстОшибки", Ответ.Ошибка.ТекстОшибки);
	Результат.Вставить("Цвет", Ответ.Цвет);
	Результат.Вставить("Квадратура", Ответ.Квадратура);
	Результат.Вставить("Оператор", Ответ.Оператор);
	Результат.Вставить("Остаток", Ответ.Остаток);
	Результат.Вставить("Толщина", Ответ.Толщина);
	Результат.Вставить("УникальныйИдентификаторЗаказаНаПроизводство", Ответ.УникальныйИдентификаторЗаказаНаПроизводство);
	
	ПараметрыЗаказа = Новый ТаблицаЗначений;
	ПараметрыЗаказа.Колонки.Добавить("Длина"); 
	ПараметрыЗаказа.Колонки.Добавить("Количество");
	ПараметрыЗаказа.Колонки.Добавить("КоличествоМП");
	ПараметрыЗаказа.Колонки.Добавить("КоличествоКвМ");
	
	ПараметрыЗаказа.ЗаполнитьЗначения(Ответ.ПараметрыЗаказа);
	
	Результат.Вставить("ПараметрыЗаказа", ПараметрыЗаказа);
		
	Возврат Результат;
	
КонецФункции

////////////////////////

Функция НовыйПрокси() 

	Логин  = "УправлениеСтанками";
	Пароль = "225889";
	Определения = Новый WSОпределения("http://192.168.1.2/data2013/ws/DataTransfer?wsdl", Логин, Пароль);
	
	Прокси = Новый WSПрокси(Определения, "DataTransfer", "DataTransfer", "DataTransferSoap");
	Прокси.Пользователь = Логин;
	Прокси.Пароль       = Пароль;
	
	Возврат Прокси;
	
КонецФункции
